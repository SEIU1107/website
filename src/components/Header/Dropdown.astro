---
export interface Props {
    title: string; /* Top Level Name of Dropdown */
    titleHref: string; /* Path to page if button is clicked, if any. */
    content: {
        pageName: string; /* Name of the content in dropdown */
        href: string; /* Path to page when content clicked */
    }[];
}

const {title = 'Dropdown', titleHref = '', content} = Astro.props as Props;
---

<div class="dropdown">
    {titleHref === '' ? (
            <button class="dropbtn">{title}</button>
    ) : (
            <a href={titleHref}><button class="dropbtn">{title}</button></a>
    )}
    <div class="dropdown-content">
        {content.map((content) => (
            <a href={content.href}>{content.pageName}</a>
        ))}
    </div>
</div>

<style>
    /* Style The Dropdown Button */
    .dropbtn {
        background-color: #371E51;
        color: white;
        padding: 16px;
        font-size: 16px;
        border: none;
        cursor: pointer;
    }

    /* The container <div> - needed to position the dropdown content */
    .dropdown {
        position: relative;
        display: inline-block;
    }

    /* Dropdown Content (Hidden by Default) */
    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #371E51;
        min-width: 160px;
        box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
        z-index: 1;
    }

    /* Links inside the dropdown */
    .dropdown-content a {
        color: white;
        padding: 12px 16px;
        text-decoration: none;
        display: block;
    }

    /* Change color of dropdown links on hover */
    .dropdown-content a:hover {
        background-color: #FECD01;
        color: #522C79;
    }

    /* Show the dropdown menu on hover */
    .dropdown:hover .dropdown-content {
        display: block;
    }

    /* Change the background color of the dropdown button when the dropdown content is shown */
    .dropdown:hover .dropbtn {

        background-color: #FECD01;
        color: #522C79;
    }
</style>